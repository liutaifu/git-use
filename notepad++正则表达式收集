notepad++ 正则表达式整理
1. 从行首匹配，可以用"^"来实现
2. 从行尾匹配，可以用"$"来实现
3. "." 匹配任意字符，除了新一行(\n)。也就是说 “.”可以匹配 \r ，当文件中同时含有\r and \n时，会引起混乱。要匹配所有的字符，使用\s\S。
4. "*" 匹配0次或更多
5. "+" 匹配1次或多个字符
6. \r\n\r\n   \r\n 移除空行
7. 行首空格和空行去除："^\s+" -> ""
8. 行尾空格和空行去除: "\s+$" -> ""
9. 按头AB,尾CD去除内容(单行非贪婪)："AB.+?CD" 或 "AB.*?CD" -> ""
10. 按头AB,尾CD去除内容(单行贪婪)："AB.+CD" 或 "AB.*CD" -> ""
11. 按头AB,尾CD去除内容(多行非贪婪)："AB[\W\w]+?CD" 或  "AB[\W\w]*?CD" -> ""
12. 按头AB,尾CD去除内容(多行贪婪)："AB[\W\w]+CD" 或  "AB[\W\w]*CD" -> ""
13. [0-9] 匹配任意一个数字
14. [a-z],[A-Z],表示所以的小/大写字母
15. [^…] 表示字符补集. 例如, [^A-Za-z] 表示任意字符除了字母表。
16. ? 匹配0次或1次
17. {n} 匹配确定的n次。例如, ‘Sa{2}m’ 匹配 Saam.
18. {m,n} 匹配至少m次，至多n次(如果n缺失，则任意次数).例如, ‘Sa{2,3}m’ 匹配 Saam or Saaam. ‘Sa{2,}m’ 与 ‘Saa+m’相同
19. *?, +?, ??, {n,m}? 非贪心匹配，匹配第一个有效的匹配，通常 ‘<.>’ 会匹配整个 ‘content’字符串 –但 ‘<.?>’ 只匹配 ” .这个标记一个标签区域，这些区域可以用语法\1 \2 等访问多个对应1-9区域。
20. (…) 一组捕获. 可以通过\1 访问第一个组, \2 访问第二个.
21. (?:…) 非捕获组.
22. (?=…) 非捕获组 – 向前断言. 例如’(.*)(?=ton)’ 表达式，当 遇到’Appleton’字符串时，会匹配为’Apple’.
23. (?<=…) 非捕获组 – 向后断言. 例如’(?<=sir) (.*)’ 表示式，当遇到’sir William’ 字符串时，匹配为’ William’.
24. (?!…)非捕获组 – 消极的向前断言. 例如’.(?!e)’ 表达式，当遇到’Apple’时，会找到每个字母除了 ‘l’，因为它紧跟着 ‘e’.
25. (? 非捕获组 – 消极向后断言. 例如 ‘(?
26. (?P…) 命名所捕获的组. 提交一个名称到组中供后续使用，例如’(?PA[^\s]+)\s(?P=first)’ 会找到 ‘Apple Apple’. 类似的 ‘(A[^\s]+)\s\1’ 使用组名而不是数字.
27. (?=name) 匹配名为name的组. (?P…).
28. (?#comment) 批注 –括号中的内容在匹配时将被忽略。
29. \s	匹配空格. 注意，会匹配标记的末尾. 使用 [[:blank:]] 来避免匹配新一行。
30. \S	匹配非空白
31. \w	匹配单词字符
32. \W	匹配非单词字符
33. \d	匹配数字字符
34. \D	匹配非数字字符
35. \b	匹配单词边界. ‘\bW\w+’ 找到W开头的单词
36. \B	匹配非单词边界. ‘\Be\B+’ – 找到位于单子中间的字母’e’
37. \<	This matches the start of a word using Scintilla’s definitions of words.
38. >	This matches the end of a word using Scintilla’s definition of words.
39. \x	运行用x来表达可能具有其他意思的字符。例如, [ 用来插入到文本中作为[ 而不是作为字符集的开始.
40. [[:alpha:]]	匹配字母字符: [A-Za-z]
41. [[:digit:]]	匹配数字字符: [0-9]
42. [[:xdigit:]]	匹配16进制字符: [0-9A-Fa-f]
43. [[:alnum:]]	匹配字母数字字符: [0-9A-Za-z]
44. [[:lower:]]	匹配小写字符: [a-z]
45. [[:upper:]]	匹配大写字符: [A-Z]
46. [[:blank:]]	匹配空白 (空格 or tab):[ \t]
47. [[:space:]]	匹配空白字符:[ \t\r\n\v\f]
48. [[:punct:]]	匹配标点字符: [-!”#$%&’()*+,./:;<=>?@[]_`{
49. [[:graph:]]	匹配图形字符: [\x21-\x7E]
50. [[:print:]]	匹配可打印的字符 (graphical characters and spaces)
51. [[:cntrl:]]	匹配控制字符
52. 使用正则表达式的标记，通过（）来包围想要用的字符，然后用\1 来替换字符串，第一个匹配文本。
  原句：Hi my name is Fred	
  正则表达式搜索：my name is (.+)	
  正则表达式替换：my name is not \1	
  结果：Hi my name is not Fred
  原句：The quick brown fox jumped over the fat lazy dog	
  正则表达式搜索：brown (.+) jumped over the (.+)	
  正则表达式替换：brown \2 jumped over the \1	
  结果：The quick brown fat jumped over the fox lazy dog
