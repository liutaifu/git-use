xx$ git push origin HEAD:refs/for/SLB786
Counting objects: 39, done.
Delta compression using up to 20 threads.
Compressing objects: 100% (31/31), done.
Writing objects: 100% (39/39), 3.65 KiB | 0 bytes/s, done.
Total 39 (delta 33), reused 9 (delta 8)
remote: Resolving deltas: 100% (33/33)
remote: Processing changes: refs: 1, done
remote: ERROR: commit aebbfec: missing Change-Id in message footer
remote:
remote: Hint: to automatically insert a Change-Id, install the hook:
remote:   gitdir=$(git rev-parse --git-dir); scp -p -P 29418 liutaifu@192.168.0.240:hooks/commit-msg ${gitdir}/hooks/
remote: and then amend the commit:
remote:   git commit --amend
remote:

错误原因：commit aebbfec: missing Change-Id in message footer

通过git log 查找commit aebbfec，发现merge时没有Change-Id。

1. 
   git reset --hard 回退提交
   git reset --soft aebbfec 前一笔提交
   git status 查看状态
   git commit -s  添加commit，保存退出
   git pull 更新到最新，
   重新提交


git commit 时使用模板提交
先修改模板template.txt，再执行如下一行
git config --global commit.template ~/template.txt
后执行 git commit; git push xxx

2.merge master
   2.1 先创建一个分支
   2.2 在新分支先把修改提交，git add ; git commit -m ""; 不执行git push
   2.3 然后切到master分支
   2.4 git merge 提交分支
   2.5 git push origin master

github.com 无法访问页面
1.访问http://www.github.com.ipaddress.com/, 查看GitHub的ip地址
2.在hosts文件中增加一行(注意,前面的是上面查到的ip地址,不要照着我的写,要改成查到的)


1.git push <remote 名字> <本地分支的名字> : <远程库的名字>
git push origin HEAD:refs/for/master(自己创建一个新分支，master是指向的分支)
git push 肯定是推送
origin : 是远程的库的名字
HEAD: 是一个特别的指针，它是一个指向你正在工作的本地分支的指针，可以把它当做本地分支的别名，git这样就可以知道你工作在哪个分支
refs/for :意义在于我们提交代码到服务器之后是需要经过code review 之后才能进行merge的
refs/heads 不需要

git tag 使用
https://blog.csdn.net/lindali1115/article/details/116652266
